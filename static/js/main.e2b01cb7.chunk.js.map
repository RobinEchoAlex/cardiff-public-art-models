{"version":3,"sources":["leaflet.js","App.js","reportWebVitals.js","index.js"],"names":["Leaflet","props","coord","this","console","log","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","position","Popup","React","Component","makeStyles","table","minWidth","createData","folder","name","fbxUrl","photosUrl","sketchfabUrl","rows","BasicTable","handleClick","bind","event","id","onSelectedModelChanged","TableContainer","component","Paper","Table","className","TableHead","TableRow","TableCell","align","TableBody","map","row","hover","onClick","e","src","width","height","scope","href","SketchfabEmbedding","title","frameBorder","allowFullScreen","mozallowfullscreen","webkitallowfullscreen","allow","App","handleSelectedModelChanged","getObj","state","selectedModel","setState","find","obj","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2b01cb7.chunk.js","sourcesContent":["import { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\r\nimport React from 'react';\r\nimport \"./leaflet.css\"\r\n\r\n//https://stackoverflow.com/questions/67552020/how-to-fix-error-failed-to-compile-node-modules-react-leaflet-core-esm-pat\r\n//https://github.com/PaulLeCam/react-leaflet/issues/453\r\nexport class Leaflet extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n  render(){\r\n    let coord = this.props.coord\r\n    console.log(coord)\r\n    return(\r\n      <MapContainer center={coord} zoom={13} scrollWheelZoom={false}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={coord}>\r\n          <Popup>\r\n            A pretty CSS3 popup. <br /> Easily customizable.\r\n          </Popup>\r\n        </Marker>\r\n      </MapContainer>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Leaflet} from \"./leaflet\";\r\nimport \"./App.css\"\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction createData(folder,name, fbxUrl, photosUrl, coord, sketchfabUrl) {\r\n  return { folder, name, fbxUrl, photosUrl, coord , sketchfabUrl};\r\n}\r\n\r\nconst rows = [\r\n  createData('skeleton',\r\n    \"Memorial to Diverse Ethnic and Commonwealth People In War\",\r\n    \"https://drive.google.com/file/d/1LNMuZXiT8NdX2J66xm80QdM64ZkXIm9_/view?usp=sharing\",\r\n    \"#\",\r\n    [51.485999751019435, -3.1802259356889366],\r\n    \"https://sketchfab.com/models/ca05b951486840cda1a45e7a890128f9/embed\"),\r\n  createData('skeleton2',\r\n    'Drinking Fountain',\r\n    \"https://drive.google.com/file/d/1v5fbbISKRjkV5ZrtvZSmvoDCnhAFP8Fr/view?usp=sharing\",\r\n    \"#\",\r\n    [51.48374634245954, -3.1782340219244305],\r\n    \"https://sketchfab.com/models/a24b2438e3674b3b8c334d136dc89126/embed\"),\r\n  createData('magistrates',\r\n    'Magistrate Court',\r\n    \"https://drive.google.com/file/d/1-q6LwWB1VO4VjxMqtHlYMdinxTKZPByG/view?usp=sharing\",\r\n    \"#\",\r\n    [51.48152690383384, -3.1663288597426518]),\r\n  createData('girl',\r\n    'Girl',\r\n    '',\r\n    '',\r\n    [51.485165905517405, -3.1768937541292517])\r\n];\r\n\r\nclass BasicTable extends React.Component{\r\n  //const classes = useStyles();\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick (event, id){\r\n    this.props.onSelectedModelChanged(id);\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table className={\"table\"} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Photo</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell align=\"right\">model (.fbx)</TableCell>\r\n              <TableCell align=\"right\">original photos</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.name} hover={true} onClick={(e) => {this.handleClick(e,row.name)}}>\r\n                <TableCell ><img src={'./models/'+row.folder+'/image.jpg'} width=\"75\" height=\"100\"/></TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">{row.name}</TableCell>\r\n                <TableCell align=\"right\"><a href={row.fbxUrl}>Download</a></TableCell>\r\n                <TableCell align=\"right\"><a href={row.photosUrl}>Download</a></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n  }\r\n}\r\n\r\nclass SketchfabEmbedding extends  React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.title==null || this.props.url==null) return(\r\n      <iframe title=\"Drinking Fountain\" frameBorder=\"0\" allowFullScreen mozallowfullscreen=\"true\"\r\n              webkitallowfullscreen=\"true\" allow=\"fullscreen; autoplay; vr\" xr-spatial-tracking=\"true\"\r\n              execution-while-out-of-viewport=\"true\" execution-while-not-rendered=\"true\" web-share=\"true\"\r\n              src=\"https://sketchfab.com/models/a24b2438e3674b3b8c334d136dc89126/embed\"></iframe>\r\n    )\r\n    else return(\r\n      <iframe title={this.props.title} frameBorder=\"0\" allowFullScreen mozallowfullscreen=\"true\"\r\n              webkitallowfullscreen=\"true\" allow=\"fullscreen; autoplay; vr\" xr-spatial-tracking=\"true\"\r\n              execution-while-out-of-viewport=\"true\" execution-while-not-rendered=\"true\" web-share=\"true\"\r\n              src={this.props.url}></iframe>\r\n    )\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSelectedModelChanged = this.handleSelectedModelChanged.bind(this);\r\n    this.getObj = this.getObj.bind(this);\r\n    this.state = {selectedModel: \"Memorial to Diverse Ethnic and Commonwealth People In War\"};\r\n  }\r\n\r\n  handleSelectedModelChanged(selectedModel) {\r\n    this.setState({selectedModel: selectedModel});\r\n  }\r\n\r\n  getObj(){//TODO map rather than array\r\n    return rows.find(obj=> {return obj.name===this.state.selectedModel})\r\n  }\r\n\r\n  render() {\r\n    let obj = this.getObj();\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 id=\"title\">Cardiff Public Art Model Repository - Site Under Construction </h1>\r\n        <p id=\"intro\">This site displays 3D models created during the Cardiff University summer project Computational Culture Heritage. These models are reconstructed from photos with Meshroom and Autodesk Recap. All the model meshes and original photos are available to download.\r\n        </p>\r\n        <div id=\"table\">\r\n          <BasicTable onSelectedModelChanged={this.handleSelectedModelChanged} />\r\n        </div>\r\n        <div id=\"map\">\r\n          <Leaflet id=\"map\" coord={obj.coord}/>\r\n        </div>\r\n        <div className=\"sketchfab-embed-wrapper\">\r\n          <SketchfabEmbedding url={obj.sketchfabUrl} title={obj.name}/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}